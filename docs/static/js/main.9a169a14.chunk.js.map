{"version":3,"sources":["components/AddCategory.js","Helpers/getGifs.js","components/GridImages.js","components/GridGif.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","placeholder","getGif","categoria","a","urlData","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","console","log","GridImages","imagenes","className","key","src","alt","GridGif","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","category","cat","ReactDOM","render","document","getElementById"],"mappings":"0OAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAgB1C,OACG,0BAAMC,SAXY,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAY,SAACS,GAAW,MAAM,CAAEP,GAAR,mBAAsBO,OAE9CN,EAAc,OAMlB,2BACIO,KAAK,OACLC,MAAST,EACTU,SAjBc,SAACP,GAAMF,EAAcE,EAAEQ,OAAOF,QAkB5CG,YAAc,0BAElB,+B,uBC1BKC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,sEAIZC,EAJY,iDAIwCC,UAAUH,GAJlD,+DAKCI,MAAMF,GALP,cAKZG,EALY,gBAMIA,EAAKC,OANT,uBAMVC,EANU,EAMVA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZC,IAAMH,EAAII,OAAOC,iBAAiBF,QAXxB,kBAcXL,GAdW,kCAmBdQ,QAAQC,IAAR,MAnBc,0DAAH,sDCANC,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACxB,OAEQ,yBAAKC,UAAY,aAEbD,EAASV,KACT,SAACC,GACO,OAAQ,yBAAKW,IAAKX,EAAIC,GAAIS,UAAW,QACzB,yBAAME,IAAOZ,EAAIG,IAAKU,IAAMb,EAAIE,QAChC,2BAAIF,EAAIE,aCN/BY,EAAU,SAAC,GAAiB,IAAhBxB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAa,IAAD,EAEXf,mBACtB,CACIsB,KAAM,GACNkB,SAAS,IALoB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAwBrC,OAfAC,qBAAW,WACH7B,EAAOC,GAAW6B,MACd,SAACC,GAEOH,EAEI,CACIpB,KAAMuB,EACNL,SAAS,SAKlC,CAACzB,IAEG0B,EDjB0BK,CAAa/B,GAAjCc,EANuB,EAM7BP,KAAckB,EANe,EAMfA,QACrB,OACQ,oCACA,wBAAIL,UAAU,qCAAqCpB,GAC9CyB,GAAW,uBAAGL,UAAU,oCAAb,YAEX,4BAEON,EAAOL,KAAI,SAACC,GACZ,OAAO,wBAAIW,IAAKX,EAAIC,IAAKD,EAAIE,WAKjC,kBAAC,EAAD,CAAaO,SAAYL,MEnBvCkB,EAAe,WAAM,IAAD,EACU/C,mBAAS,CAAC,KADpB,mBACfgD,EADe,KACLjD,EADK,KAGtB,OACA,oCACI,6CACA,kBAAC,EAAD,CAAaA,YAAeA,IAC5B,6BAEC,4BAEIiD,EAASxB,KAAI,SAACyB,GACV,OAAO,kBAAC,EAAD,CAASb,IAAKa,EAAKlC,UAAWkC,UCbtDC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.9a169a14.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handlerChange = (e) =>{setInputValue(e.target.value)}\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 0)\r\n        {\r\n            setCategory((cate) => { return [inputValue,...cate] })\r\n            //setCategory(inputValue)\r\n            setInputValue(\"\")\r\n        }\r\n         }\r\n\r\n    return (\r\n       <form onSubmit ={handleSubmit }>\r\n        <input\r\n            type=\"text\"\r\n            value = {inputValue}\r\n            onChange = {handlerChange}\r\n            placeholder = \"Ingrese una categoria\"\r\n        /> \r\n        <br />\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory : PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGif = async(categoria) =>{\r\n     \r\n    try \r\n    {\r\n    const urlData = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=supKJkA9JIf0eULITf9fVQdr8UURWYoD`\r\n    const resp = await fetch(urlData)\r\n    const  {data} = await resp.json()\r\n    const gifs = data.map((img)=>{\r\n        return{\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n        \r\n    } \r\n    \r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GridImages = ({imagenes}) => {\r\n    return (\r\n\r\n            <div className = \"card-grid\">\r\n             {   \r\n                imagenes.map(\r\n                (img)=>{\r\n                        return (<div key={img.id} className= \"card\">  \r\n                                    <img  src = {img.url} alt= {img.title}></img> \r\n                                    <p>{img.title}</p>\r\n                                </div>) \r\n                        }\r\n                        ) \r\n            }\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GridImages } from './GridImages'; \r\n//import { getGif } from '../Helpers/getGifs';\r\n\r\nexport const GridGif = ({categoria}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    // useEffect(() => {\r\n    //    getGif(categoria).then((img)=>{setImages(img)})\r\n    // },[categoria])\r\n    const {data: images, loading} =  useFetchGifs(categoria)\r\n    return (\r\n            <>\r\n            <h1 className=\"animate__animated animate__bounce\">{categoria}</h1>\r\n                {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n\r\n                 <ol >\r\n                    {\r\n                        images.map((img)=>{\r\n                        return <li key={img.id}>{img.title}</li>\r\n                        })\r\n                    }\r\n                 </ol> \r\n               \r\n                    <GridImages  imagenes = {images} />\r\n            </>\r\n    )\r\n}\r\n","import  {useEffect,useState} from 'react'\r\nimport {getGif} from '../Helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (categoria)=>{\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data: [],\r\n            loading: true\r\n        }\r\n    );\r\n\r\n    useEffect( () => {\r\n            getGif(categoria).then(\r\n                (imgs)=>\r\n                {\r\n                        setState\r\n                        (\r\n                            {\r\n                                data: imgs,\r\n                                loading: false\r\n                            }\r\n                        )\r\n                }\r\n            )\r\n    }, [categoria])\r\n        \r\n    return state\r\n}","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport \"./styles/styles.scss\"\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GridGif } from './components/GridGif';\r\n\r\nconst GifExpertApp = () =>{\r\n    const [category, setCategory] = useState([\"\"])\r\n    //const [category, setCategory] = useState(\"\")\r\n    return(\r\n    <>\r\n        <h1 >GifExpertApp </h1>\r\n        <AddCategory setCategory = {setCategory}/>\r\n        <hr />\r\n       {/* <GridGif key={category} categoria={category} /> */}\r\n         <ol>\r\n        {\r\n             category.map((cat)=>{\r\n                 return <GridGif key={cat} categoria={cat} /> })                \r\n        }\r\n        </ol>   \r\n    </> \r\n    )\r\n}\r\nexport {GifExpertApp}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}